{"version":3,"sources":["Components/Button.js","Components/Header.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","Components/Footer.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","href","About","App","showAddTask","setShowAddTask","setTask","Math","floor","random","newTask","length","filter","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b2cfbec.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick}) => {\r\n    \r\n\r\n    return (\r\n       \r\n           <button onClick={onClick} style={{ backgroundColor: color}} className='btn'>{text}</button>   \r\n       \r\n    )\r\n}\r\n \r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\nimport Button  from './Button'\r\n\r\nexport const Header = ({ title , onAdd, showAdd}) => {\r\n    \r\n    return (\r\n        <header className='header'>\r\n           <h1>{title}</h1>\r\n           <Button color={showAdd ? 'red' : 'green'} \r\n           text={showAdd ? 'Close':'Add'} onClick ={onAdd } />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}","import { FaTimes} from 'react-icons/fa'\r\n const Task = ( {task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={()=> onToggle(task.id)}>\r\n            <h3 > {task.text} <FaTimes style={{ color:'red', \r\n            cursor: 'pointer'}} onClick={() => onDelete(task.id)}/></h3>\r\n            <p>{task.day}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","\r\nimport  Task  from \"./Task\"\r\n\r\n const Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    \r\n    return (\r\n        <>\r\n         {tasks.map((task) => (\r\n         <Task key={task.id} task= {task} \r\n         onDelete={onDelete}\r\n         onToggle = {onToggle}/>\r\n         ))}    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import { useState } from \"react\"\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText]= useState('')\r\n    const [day, setDay]= useState('')\r\n    const [reminder, setReminder]= useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(!text){\r\n            alert('Please add a task')\r\n        }\r\n        onAdd({text, day, reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n        \r\n    }\r\n\r\n    return (\r\n        <form className ='add-form' onSubmit={onSubmit}>\r\n        <div className='form-control'>\r\n        <label>Task</label>\r\n        <input type='text' placeholder='Add Task'  \r\n        value={text} onChange={(e) =>\r\n            setText(e.target.value)}/>\r\n            \r\n        </div>\r\n        <div className='form-control'>\r\n        <label>Day and Time</label>\r\n        <input type='text' placeholder='Add day and time' onChange={(e) =>\r\n            setDay(e.target.value)} />\r\n            \r\n        </div>\r\n        <div className='form-control-check'>\r\n        <label>Set Reminder</label>\r\n        <input type='checkbox' \r\n        checked={reminder}\r\n        value={reminder}\r\n        onChange={(e) =>\r\n            setReminder(e.currentTarget.checked)} />\r\n            \r\n        </div>\r\n        <input type =\"submit\" value = \"save task\" className=\"btn btn-block\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","\r\n const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p> Copyright &copy; 2021</p>\r\n            <a href='/about'>About</a>\r\n            \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <a href='/'>Go Back</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","\nimport { Header } from \"./Components/Header\";\nimport { BrowserRouter as Router,Routes, Route} from 'react-router-dom'\nimport Tasks from \"./Components/Tasks\";\nimport { useState , useEffect} from \"react\";\nimport  AddTask  from \"./Components/AddTask\";\nimport  Footer  from \"./Components/Footer\";\nimport About from \"./Components/About\";\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTask] = useState([\n    \n      {\n        \"text\": \"make application mapping list\",\n        \"day\": \"today 9.30pm\",\n        \"reminder\": true,\n        \"id\": 4\n      },\n      {\n        \"text\": \"Deploy Application\",\n        \"day\": \"Today 6.30pm\",\n        \"reminder\": false,\n        \"id\": 5\n      }\n    \n    ])\n    // useEffect(()=>{\n    //   const getTasks = async () => {\n    //     const tasksFromServer = await fetchTasks()\n    //     setTask(tasksFromServer)\n    //   }\n    //   getTasks()\n    // }, [])\n\n    // const fetchTasks = async() => {\n    //   const res = await fetch('http://localhost:5000/tasks')\n    //   const data = await res.json()\n    //   return data \n    // }\n\n    // const fetchTask = async(id) => {\n    //   const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    //   const data = await res.json()\n    //   return data \n    // }\n    const addTask = (task)=>{\n    //   const res =await fetch ('http://localhost:5000/tasks',\n    //   {method: 'POST',\n    //   headers : {\n    //     'Content-type': 'application/json'\n    //   },\n    //   body: JSON.stringify(task)\n    // })\n\n    // const data = await res.json()\n    // setTask([...tasks, data])\n      \n      const id = Math.floor(Math.random()*10000) + 1\n      const newTask = {id, ...task}\n      setTask([...tasks, newTask])\n    } \n    const deleteTask = (id) =>{\n      // await fetch(`http://localhost:5000/tasks/${id}`, {\n      //   method: 'DELETE',\n      // })\n\n      setTask(tasks.filter((task)=> task.id !==id))\n    }\n\n    const toggleReminder = (id)=>{\n      setTask(tasks.map((task)=> task.id === id ? {...task,reminder:!task.reminder}: task))\n      // const taskToToggle = await fetchTask(id)\n      // const updTask = {...taskToToggle,\n      // reminder: !taskToToggle.reminder}\n\n      // const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      //   method:'PUT',\n      //   headers: {\n      //     'Content-type': 'application/json'\n      //   },\n      //   body: JSON.stringify(updTask),\n        \n      // })\n      // const data =await res.json()\n      // setTask(\n      //   tasks.map((task)=> \n      //   task.id == id ? {...task, reminder :\n      //   data.reminder} : task\n      //   )\n      // )\n    }\n  return (\n    <Router>\n      \n    <div className=\"container\">\n    <Header onAdd ={()=> setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n    {showAddTask && <AddTask onAdd={addTask}/>}\n   {tasks.length > 0 ? (<Tasks tasks = {tasks}  onDelete={deleteTask}\n    onToggle ={toggleReminder} /> ):('No Tasks to Show')\n   }\n    \n    <Routes>\n    \n    <Route path ='/about' element={<About />} />\n    </Routes>\n    <Footer />\n    </div>\n   \n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}